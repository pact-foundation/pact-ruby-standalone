env:
  PACT_VERSION: 2.0.0


BUILD_TEST_TASK_TEMPLATE: &BUILD_TEST_TASK_TEMPLATE
  arch_check_script:
    - uname -am
  install_script: bundle install
  build_script: bundle exec rake package
  test_script: chmod +x ./script/unpack-and-test.sh && ./script/unpack-and-test.sh

STANDALONE_INSTALL_TASK_TEMPLATE: &STANDALONE_INSTALL_TASK_TEMPLATE
  install_script: |
    wget -q https://github.com/pact-foundation/pact-ruby-standalone/releases/download/v${PACT_VERSION}/pact-${PACT_VERSION}-linux-${TARGET_ARCH}.tar.gz \
    && tar xzf pact-${PACT_VERSION}-linux-${TARGET_ARCH}.tar.gz \
    && rm -rf pact-${PACT_VERSION}-linux-${TARGET_ARCH}.tar.gz \
    && ln -s $PWD/pact/bin/* /usr/local/bin \
    && ls pact/bin/ \
    && ls /usr/local/bin

## This is a yak shave relating to https://github.com/pact-foundation/pact-ruby-standalone/issues/102
## pact-plugin-cli is not compatible with current guidance for alpine aarch64 with official arm64v8/alpine 
## This task is reused in TEST_FULL_CLI_TASK_TEMPLATE adding in the pact-plugin-cli so its tested for other combos
TEST_RUBY_CLI_TASK_TEMPLATE: &TEST_RUBY_CLI_TASK_TEMPLATE
  test_script: | # would rather avoid the commands here, but also want to keep the images clean so they can be easily used by users
      pact-broker --help
      pact-message --help
      pact-mock-service --help
      pact-provider-verifier --help
      pact-stub-service --help
      pactflow --help

TEST_FULL_CLI_TASK_TEMPLATE: &TEST_FULL_CLI_TASK_TEMPLATE
  test_plugin_cli_script: pact-plugin-cli --help
  <<: *TEST_RUBY_CLI_TASK_TEMPLATE

DOCKER_ARGS_ARM64_TEMPLATE: &DOCKER_ARGS_ARM64_TEMPLATE
    docker_arguments:
      PACT_VERSION: $PACT_VERSION
      TARGET_ARCH: arm64

DOCKER_ARGS_X64_TEMPLATE: &DOCKER_ARGS_X64_TEMPLATE
    docker_arguments:
      PACT_VERSION: $PACT_VERSION
      TARGET_ARCH: x86_64

# This task packages up the pact-ruby-standalone for all arches
# it uses the ruby image to save time
# BINARY_ env vars are set, so we only test our platform specific pact-ruby-standalone
builder_linux_x64_task: 
  env:
    BINARY_OS: linux
    BINARY_ARCH: x86_64
    PATH: "$HOME/.rbenv/bin:/root/.rbenv/shims:$PATH"
  container:
    image: ruby:3.1.4
  pre_req_script:
      apt update --yes && apt install --yes zip
  << : *BUILD_TEST_TASK_TEMPLATE
  binary_artifacts:
    path: "pkg/*"
builder_linux_slim_x64_task: 
  env:
    BINARY_OS: linux
    BINARY_ARCH: x86_64
    PATH: "$HOME/.rbenv/bin:/root/.rbenv/shims:$PATH"
  container:
    image: ruby:3.1.4-slim
  pre_req_script:
      apt update --yes && apt install --yes zip curl
  << : *BUILD_TEST_TASK_TEMPLATE
  binary_artifacts:
    path: "pkg/*"

builder_linux_arm64_task: 
  env: 
    BINARY_OS: linux
    BINARY_ARCH: arm64
    PATH: "$HOME/.rbenv/bin:/root/.rbenv/shims:$PATH"
  arm_container:
    image: ruby:3.1.4
  pre_req_script:
      apt update --yes && apt install --yes zip
  << : *BUILD_TEST_TASK_TEMPLATE
  binary_artifacts:
    path: "pkg/*"
builder_linux_slim_arm64_task: 
  env:
    BINARY_OS: linux
    BINARY_ARCH: arm64
    PATH: "$HOME/.rbenv/bin:/root/.rbenv/shims:$PATH"
  arm_container:
    image: ruby:3.1.4-slim
  pre_req_script:
      apt update --yes && apt install --yes zip curl
  << : *BUILD_TEST_TASK_TEMPLATE
  binary_artifacts:
    path: "pkg/*"

# This task packages up the pact-ruby-standalone for all arches
# using macOS and then tests out the arm64 package
macos_arm64_task: 
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
  env:
    BINARY_OS: osx
    BINARY_ARCH: arm64
  pre_req_script: 
    - |
      brew unlink openssl && brew link --force openssl
      wget https://cache.ruby-lang.org/pub/ruby/3.1/ruby-3.1.4.tar.gz
      tar xf ruby-3.1.4.tar.gz
      cd ruby-3.1.4
      ./configure --prefix=/Users/$USER/.rbenv/versions/3.1.4
      make -j9
      make install
    - rbenv global 3.1.4
    - ruby --version
  << : *BUILD_TEST_TASK_TEMPLATE
  binary_artifacts:
    path: "pkg/*"


## Test published standalone against arm64 versions
alpine_arm64_task: 
  arm_container:
    dockerfile: Dockerfile.alpine.arm64
    <<: *DOCKER_ARGS_ARM64_TEMPLATE
  <<: *TEST_RUBY_CLI_TASK_TEMPLATE
ubuntu_arm64_task: 
  arm_container:
    dockerfile: Dockerfile.ubuntu
    <<: *DOCKER_ARGS_ARM64_TEMPLATE
  <<: *TEST_RUBY_CLI_TASK_TEMPLATE
debian_arm64_task: 
  arm_container:
    dockerfile: Dockerfile.debian.slim
    <<: *DOCKER_ARGS_ARM64_TEMPLATE
  <<: *TEST_RUBY_CLI_TASK_TEMPLATE
## Test published standalone against x64 versions
alpine_x64_task: 
  container:
    dockerfile: Dockerfile.alpine.x64
    <<: *DOCKER_ARGS_X64_TEMPLATE
  <<: *TEST_RUBY_CLI_TASK_TEMPLATE
ubuntu_x64_task: 
  container:
    dockerfile: Dockerfile.ubuntu
    <<: *DOCKER_ARGS_X64_TEMPLATE
  <<: *TEST_FULL_CLI_TASK_TEMPLATE
debian_x64_task: 
  container:
    dockerfile: Dockerfile.debian.slim
    <<: *DOCKER_ARGS_X64_TEMPLATE
  <<: *TEST_FULL_CLI_TASK_TEMPLATE

## The following task will fail, until the PR addressing https://github.com/pact-foundation/pact-ruby-standalone/issues/56 is merged
## and released. Shown working in the builder_linux_task task
# ruby_3_2_2_task:
#   arm_container:
#     image: ruby:3.1.4
#     <<: *DOCKER_ARGS_ARM64_TEMPLATE
#   <<: *STANDALONE_INSTALL_TASK_TEMPLATE
#   <<: *TEST_FULL_CLI_TASK_TEMPLATE
