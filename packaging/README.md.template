# Pact standalone executables

This package contains the Ruby implementations of the Pact Mock Service, Pact Provider Verifier and Pact Broker Client, packaged with Travelling Ruby so that they can be run from the command line without a Ruby installation.

To connect to a Pact Broker that uses custom SSL cerificates, set the environment variable `$SSL_CERT_FILE` or `$SSL_CERT_DIR` to a path that contains the appropriate certificate.

## Package contents

This version (<%= ENV.fetch('VERSION') %>) of the Pact standalone executables package contains:

  * pact gem <%= Pact::VERSION %>
  * pact-mock_service gem <%= Pact::MockService::VERSION %>
  * pact-support gem <%= Pact::Support::VERSION %>
  * pact-provider-verifier gem <%= Pact::ProviderVerifier::VERSION %>
  * pact_broker-client gem <%= PactBroker::Client::VERSION %>
  * pact-message gem <%= Pact::Message::VERSION %>


## Usage

<a name="pact-mock-service"></a>
### pact-mock-service

```
<%= pact_mock_service_usage %>
```

<a name="pact-stub-service"></a>
### pact-stub-service

```
<%= pact_stub_service_usage %>
```

<a name="pact-provider-verifier"></a>
### pact-provider-verifier

To connect to a Pact Broker that uses custom SSL cerificates, set the environment variable `$SSL_CERT_FILE` or `$SSL_CERT_DIR` to a path that contains the appropriate certificate.

```
<%= pact_provider_verifier_usage %>
```

<a name="pact-broker-client"></a>
### pact-broker client

To connect to a Pact Broker that uses custom SSL cerificates, set the environment variable `$SSL_CERT_FILE` or `$SSL_CERT_DIR` to a path that contains the appropriate certificate.

<a name="pact-broker-client-publish"></a>
#### publish

```
<%= pact_publish_usage %>
```

<a name="pact-broker-client-can-i-deploy"></a>
#### can-i-deploy

```
<%= pact_broker_can_i_deploy_usage %>
```

<a name="pact"></a>

<a name="pactflow-client"></a>
### pactflow client

#### publish-provider-contract

```
<%= pactflow_publish_provider_contract_usage %>
```

### pact

<a name="pact-docs"></a>
#### docs
```
<%= pact_docs_usage %>
```

### pact-message

```
<%= pact_message_usage %>
```
